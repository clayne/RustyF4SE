> build_windows64.bat
Package Root: C:\Users\catte\dev\cxx-demo-example\
thread 'main' panicked at 'Unable to find mmscenegraph for "C:\\Users\\catte\\dev\\cxx-demo-example\\Cargo.toml"', C:\Users\catte\.cargo\registry\src\github.com-1ecc6299db9ec823\cbindgen-0.14.2\src\bindgen\cargo\cargo.rs:88:21
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
   Compiling proc-macro2 v1.0.24
   Compiling cc v1.0.62
   Compiling unicode-xid v0.2.1
   Compiling syn v1.0.48
     Running `rustc --crate-name build_script_build --edition=2018 C:\Users\catte\.cargo\registry\src\github.com-1ecc6299db9ec823\proc-macro2-1.0.24\build.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debug-assertions=off --cfg "feature=\"default\"" --cfg "feature=\"proc-macro\"" -C metadata=cb84e6e69fbef341 -C extra-filename=-cb84e6e69fbef341 --out-dir C:\Users\catte\dev\cxx-demo-example\target\release\build\proc-macro2-cb84e6e69fbef341 -L dependency=C:\Users\catte\dev\cxx-demo-example\target\release\deps --cap-lints allow`
     Running `rustc --crate-name cc --edition=2018 C:\Users\catte\.cargo\registry\src\github.com-1ecc6299db9ec823\cc-1.0.62\src\lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debug-assertions=off -C metadata=c61fda11ba136eb7 -C extra-filename=-c61fda11ba136eb7 --out-dir C:\Users\catte\dev\cxx-demo-example\target\release\deps -L dependency=C:\Users\catte\dev\cxx-demo-example\target\release\deps --cap-lints allow`
     Running `rustc --crate-name unicode_xid C:\Users\catte\.cargo\registry\src\github.com-1ecc6299db9ec823\unicode-xid-0.2.1\src\lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debug-assertions=off --cfg "feature=\"default\"" -C metadata=7eafec8eb13a6ead -C extra-filename=-7eafec8eb13a6ead --out-dir C:\Users\catte\dev\cxx-demo-example\target\release\deps -L dependency=C:\Users\catte\dev\cxx-demo-example\target\release\deps --cap-lints allow`
     Running `rustc --crate-name build_script_build --edition=2018 C:\Users\catte\.cargo\registry\src\github.com-1ecc6299db9ec823\syn-1.0.48\build.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debug-assertions=off --cfg "feature=\"clone-impls\"" --cfg "feature=\"default\"" --cfg "feature=\"derive\"" --cfg "feature=\"full\"" --cfg "feature=\"parsing\"" --cfg "feature=\"printing\"" --cfg "feature=\"proc-macro\"" --cfg "feature=\"quote\"" -C metadata=55911429ec84c0db -C extra-filename=-55911429ec84c0db --out-dir C:\Users\catte\dev\cxx-demo-example\target\release\build\syn-55911429ec84c0db -L dependency=C:\Users\catte\dev\cxx-demo-example\target\release\deps --cap-lints allow`
   Compiling cxxbridge-flags v1.0.1
     Running `rustc --crate-name cxxbridge_flags --edition=2018 C:\Users\catte\.cargo\registry\src\github.com-1ecc6299db9ec823\cxxbridge-flags-1.0.1\src\lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debug-assertions=off --cfg "feature=\"default\"" -C metadata=fb3c00729d13edd6 -C extra-filename=-fb3c00729d13edd6 --out-dir C:\Users\catte\dev\cxx-demo-example\target\release\deps -L dependency=C:\Users\catte\dev\cxx-demo-example\target\release\deps --cap-lints allow`
   Compiling libc v0.2.80
     Running `rustc --crate-name build_script_build C:\Users\catte\.cargo\registry\src\github.com-1ecc6299db9ec823\libc-0.2.80\build.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debug-assertions=off --cfg "feature=\"default\"" --cfg "feature=\"std\"" -C metadata=e8cfbf9da8795992 -C extra-filename=-e8cfbf9da8795992 --out-dir C:\Users\catte\dev\cxx-demo-example\target\release\build\libc-e8cfbf9da8795992 -L dependency=C:\Users\catte\dev\cxx-demo-example\target\release\deps --cap-lints allow`
     Running `C:\Users\catte\dev\cxx-demo-example\target\release\build\proc-macro2-cb84e6e69fbef341\build-script-build`
     Running `C:\Users\catte\dev\cxx-demo-example\target\release\build\syn-55911429ec84c0db\build-script-build`
     Running `C:\Users\catte\dev\cxx-demo-example\target\release\build\libc-e8cfbf9da8795992\build-script-build`
   Compiling link-cplusplus v1.0.4
     Running `rustc --crate-name build_script_build --edition=2018 C:\Users\catte\.cargo\registry\src\github.com-1ecc6299db9ec823\link-cplusplus-1.0.4\build.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debug-assertions=off --cfg "feature=\"default\"" -C metadata=da0f9737b0b98653 -C extra-filename=-da0f9737b0b98653 --out-dir C:\Users\catte\dev\cxx-demo-example\target\release\build\link-cplusplus-da0f9737b0b98653 -L dependency=C:\Users\catte\dev\cxx-demo-example\target\release\deps --extern cc=C:\Users\catte\dev\cxx-demo-example\target\release\deps\libcc-c61fda11ba136eb7.rlib --cap-lints allow`
   Compiling cxx v1.0.1
     Running `rustc --crate-name build_script_build --edition=2018 C:\Users\catte\.cargo\registry\src\github.com-1ecc6299db9ec823\cxx-1.0.1\build.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debug-assertions=off --cfg "feature=\"default\"" -C metadata=40c386e22f36895d -C extra-filename=-40c386e22f36895d --out-dir C:\Users\catte\dev\cxx-demo-example\target\release\build\cxx-40c386e22f36895d -L dependency=C:\Users\catte\dev\cxx-demo-example\target\release\deps --extern cc=C:\Users\catte\dev\cxx-demo-example\target\release\deps\libcc-c61fda11ba136eb7.rlib --extern cxxbridge_flags=C:\Users\catte\dev\cxx-demo-example\target\release\deps\libcxxbridge_flags-fb3c00729d13edd6.rlib --cap-lints allow`
     Running `rustc --crate-name proc_macro2 --edition=2018 C:\Users\catte\.cargo\registry\src\github.com-1ecc6299db9ec823\proc-macro2-1.0.24\src\lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debug-assertions=off --cfg "feature=\"default\"" --cfg "feature=\"proc-macro\"" -C metadata=4655cf1d099e21a0 -C extra-filename=-4655cf1d099e21a0 --out-dir C:\Users\catte\dev\cxx-demo-example\target\release\deps -L dependency=C:\Users\catte\dev\cxx-demo-example\target\release\deps --extern unicode_xid=C:\Users\catte\dev\cxx-demo-example\target\release\deps\libunicode_xid-7eafec8eb13a6ead.rmeta --cap-lints allow --cfg lexerror_display --cfg hygiene --cfg use_proc_macro --cfg wrap_proc_macro`
     Running `rustc --crate-name libc C:\Users\catte\.cargo\registry\src\github.com-1ecc6299db9ec823\libc-0.2.80\src\lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C linker-plugin-lto --cfg "feature=\"default\"" --cfg "feature=\"std\"" -C metadata=5bb6520ced337a2a -C extra-filename=-5bb6520ced337a2a --out-dir C:\Users\catte\dev\cxx-demo-example\target\release\deps -L dependency=C:\Users\catte\dev\cxx-demo-example\target\release\deps --cap-lints allow --cfg freebsd11 --cfg libc_priv_mod_use --cfg libc_union --cfg libc_const_size_of --cfg libc_align --cfg libc_core_cvoid --cfg libc_packedN --cfg libc_cfg_target_vendor`
     Running `C:\Users\catte\dev\cxx-demo-example\target\release\build\link-cplusplus-da0f9737b0b98653\build-script-build`
   Compiling quote v1.0.7
     Running `rustc --crate-name quote --edition=2018 C:\Users\catte\.cargo\registry\src\github.com-1ecc6299db9ec823\quote-1.0.7\src\lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debug-assertions=off --cfg "feature=\"default\"" --cfg "feature=\"proc-macro\"" -C metadata=7ca5e52ef9c83889 -C extra-filename=-7ca5e52ef9c83889 --out-dir C:\Users\catte\dev\cxx-demo-example\target\release\deps -L dependency=C:\Users\catte\dev\cxx-demo-example\target\release\deps --extern proc_macro2=C:\Users\catte\dev\cxx-demo-example\target\release\deps\libproc_macro2-4655cf1d099e21a0.rmeta --cap-lints allow`
     Running `C:\Users\catte\dev\cxx-demo-example\target\release\build\cxx-40c386e22f36895d\build-script-build`
     Running `rustc --crate-name link_cplusplus --edition=2018 C:\Users\catte\.cargo\registry\src\github.com-1ecc6299db9ec823\link-cplusplus-1.0.4\src\lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C linker-plugin-lto --cfg "feature=\"default\"" -C metadata=5292f72fef4e09b0 -C extra-filename=-5292f72fef4e09b0 --out-dir C:\Users\catte\dev\cxx-demo-example\target\release\deps -L dependency=C:\Users\catte\dev\cxx-demo-example\target\release\deps --cap-lints allow -L native=C:\Users\catte\dev\cxx-demo-example\target\release\build\link-cplusplus-0824135c944b4966\out -l static=link-cplusplus`
     Running `rustc --crate-name syn --edition=2018 C:\Users\catte\.cargo\registry\src\github.com-1ecc6299db9ec823\syn-1.0.48\src\lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debug-assertions=off --cfg "feature=\"clone-impls\"" --cfg "feature=\"default\"" --cfg "feature=\"derive\"" --cfg "feature=\"full\"" --cfg "feature=\"parsing\"" --cfg "feature=\"printing\"" --cfg "feature=\"proc-macro\"" --cfg "feature=\"quote\"" -C metadata=14fddb5d1194a041 -C extra-filename=-14fddb5d1194a041 --out-dir C:\Users\catte\dev\cxx-demo-example\target\release\deps -L dependency=C:\Users\catte\dev\cxx-demo-example\target\release\deps --extern proc_macro2=C:\Users\catte\dev\cxx-demo-example\target\release\deps\libproc_macro2-4655cf1d099e21a0.rmeta --extern quote=C:\Users\catte\dev\cxx-demo-example\target\release\deps\libquote-7ca5e52ef9c83889.rmeta --extern unicode_xid=C:\Users\catte\dev\cxx-demo-example\target\release\deps\libunicode_xid-7eafec8eb13a6ead.rmeta --cap-lints allow --cfg syn_disable_nightly_tests`
   Compiling cxxbridge-macro v1.0.1
     Running `rustc --crate-name cxxbridge_macro --edition=2018 C:\Users\catte\.cargo\registry\src\github.com-1ecc6299db9ec823\cxxbridge-macro-1.0.1\src\lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C embed-bitcode=no -C debug-assertions=off -C metadata=11e318c8c77fecab -C extra-filename=-11e318c8c77fecab --out-dir C:\Users\catte\dev\cxx-demo-example\target\release\deps -L dependency=C:\Users\catte\dev\cxx-demo-example\target\release\deps --extern proc_macro2=C:\Users\catte\dev\cxx-demo-example\target\release\deps\libproc_macro2-4655cf1d099e21a0.rlib --extern quote=C:\Users\catte\dev\cxx-demo-example\target\release\deps\libquote-7ca5e52ef9c83889.rlib --extern syn=C:\Users\catte\dev\cxx-demo-example\target\release\deps\libsyn-14fddb5d1194a041.rlib --extern proc_macro --cap-lints allow`
     Running `rustc --crate-name cxx --edition=2018 C:\Users\catte\.cargo\registry\src\github.com-1ecc6299db9ec823\cxx-1.0.1\src\lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C linker-plugin-lto --cfg "feature=\"default\"" -C metadata=b92f5a5ce05eabf2 -C extra-filename=-b92f5a5ce05eabf2 --out-dir C:\Users\catte\dev\cxx-demo-example\target\release\deps -L dependency=C:\Users\catte\dev\cxx-demo-example\target\release\deps --extern cxxbridge_macro=C:\Users\catte\dev\cxx-demo-example\target\release\deps\cxxbridge_macro-11e318c8c77fecab.dll --extern link_cplusplus=C:\Users\catte\dev\cxx-demo-example\target\release\deps\liblink_cplusplus-5292f72fef4e09b0.rmeta --cap-lints allow -L native=C:\Users\catte\dev\cxx-demo-example\target\release\build\cxx-fc7bd0f19a8f0cb9\out --cfg built_with_cargo -l static=cxxbridge1 -L native=C:\Users\catte\dev\cxx-demo-example\target\release\build\link-cplusplus-0824135c944b4966\out`
   Compiling mmscenegraph-rs v0.1.0 (C:\Users\catte\dev\cxx-demo-example)
     Running `rustc --crate-name mmscenegraph_rs --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type staticlib --emit=dep-info,link -C opt-level=3 -C lto -C metadata=ab7adfca6156afc1 -C extra-filename=-ab7adfca6156afc1 --out-dir C:\Users\catte\dev\cxx-demo-example\target\release\deps -L dependency=C:\Users\catte\dev\cxx-demo-example\target\release\deps --extern cxx=C:\Users\catte\dev\cxx-demo-example\target\release\deps\libcxx-b92f5a5ce05eabf2.rlib --extern libc=C:\Users\catte\dev\cxx-demo-example\target\release\deps\liblibc-5bb6520ced337a2a.rlib -L native=C:\Users\catte\dev\cxx-demo-example\target\release\build\cxx-fc7bd0f19a8f0cb9\out -L native=C:\Users\catte\dev\cxx-demo-example\target\release\build\link-cplusplus-0824135c944b4966\out`
    Finished release [optimized] target(s) in 20.34s
A subdirectory or file build already exists.
Finding: mmscenegraph_rs.lib
RUST BUILD DIR: C:/Users/catte/dev/cxx-demo-example/target/release
Rust Library: C:/Users/catte/dev/cxx-demo-example/target/release/mmscenegraph_rs.lib
-- Configuring done
-- Generating done
-- Build files have been written to: C:/Users/catte/dev/cxx-demo-example/build

Microsoft (R) Program Maintenance Utility Version 14.00.24210.0
Copyright (C) Microsoft Corporation.  All rights reserved.


Microsoft (R) Program Maintenance Utility Version 14.00.24210.0
Copyright (C) Microsoft Corporation.  All rights reserved.

Scanning dependencies of target mmscenegraph
[ 11%] Building CXX object CMakeFiles/mmscenegraph.dir/src/_cxxbridge.cpp.obj
_cxxbridge.cpp
[ 22%] Building CXX object CMakeFiles/mmscenegraph.dir/src/lib.cpp.obj
lib.cpp
[ 33%] Linking CXX shared library mmscenegraph.dll
   Creating library mmscenegraph.lib and object mmscenegraph.exp
[ 33%] Built target mmscenegraph
Scanning dependencies of target mmscenegraph_tests
[ 44%] Building CXX object CMakeFiles/mmscenegraph_tests.dir/tests/main.cpp.obj
main.cpp
[ 55%] Building CXX object CMakeFiles/mmscenegraph_tests.dir/tests/test_a.cpp.obj
test_a.cpp
[ 66%] Building CXX object CMakeFiles/mmscenegraph_tests.dir/tests/test_b.cpp.obj
test_b.cpp
[ 77%] Building CXX object CMakeFiles/mmscenegraph_tests.dir/src/_cxxbridge.cpp.obj
_cxxbridge.cpp
[ 88%] Building CXX object CMakeFiles/mmscenegraph_tests.dir/src/lib.cpp.obj
lib.cpp
[100%] Linking CXX executable mmscenegraph_tests.exe
   Creating library mmscenegraph_tests.lib and object mmscenegraph_tests.exp
[100%] Built target mmscenegraph_tests

Microsoft (R) Program Maintenance Utility Version 14.00.24210.0
Copyright (C) Microsoft Corporation.  All rights reserved.

[ 33%] Built target mmscenegraph
[100%] Built target mmscenegraph_tests
Install the project...
-- Install configuration: "Release"
-- Up-to-date: C:/Users/catte/dev/cxx-demo-example/install/include
-- Installing: C:/Users/catte/dev/cxx-demo-example/install/include/cxx.h
-- Up-to-date: C:/Users/catte/dev/cxx-demo-example/install/include/mmscenegraph
-- Up-to-date: C:/Users/catte/dev/cxx-demo-example/install/include/mmscenegraph/_cbindgen.h
-- Up-to-date: C:/Users/catte/dev/cxx-demo-example/install/include/mmscenegraph/_cpp.h
-- Installing: C:/Users/catte/dev/cxx-demo-example/install/include/mmscenegraph/_cxxbridge.h
-- Up-to-date: C:/Users/catte/dev/cxx-demo-example/install/include/mmscenegraph.h
-- Installing: C:/Users/catte/dev/cxx-demo-example/install/lib/mmscenegraph.lib
-- Installing: C:/Users/catte/dev/cxx-demo-example/install/bin/mmscenegraph.dll
-- Installing: C:/Users/catte/dev/cxx-demo-example/install/bin/mmscenegraph_tests.exe

> install\bin\mmscenegraph_tests.exe
2 + 2 = 4
SCENEGRAPH: Add SceneGraph 42
SCENEGRAPH: Remove SceneGraph 0x1bd595152c0
my awesome demo
done with ThingC

> cxxbridge --version
cxxbridge 0.5.5
