$ ./build_linux.bash
./build_linux.bash
   Compiling cc v1.0.62
   Compiling proc-macro2 v1.0.24
   Compiling unicode-xid v0.2.1
   Compiling syn v1.0.54
   Compiling cxxbridge-flags v1.0.23 (https://github.com/david-cattermole/cxx.git?rev=363c18b2982329d6e4fbc2a6e5f324f4fef03661#363c18b2)
   Compiling cxxbridge-macro v1.0.23 (https://github.com/david-cattermole/cxx.git?rev=363c18b2982329d6e4fbc2a6e5f324f4fef03661#363c18b2)
   Compiling libc v0.2.80
   Compiling link-cplusplus v1.0.4
   Compiling cxx v1.0.23 (https://github.com/david-cattermole/cxx.git?rev=363c18b2982329d6e4fbc2a6e5f324f4fef03661#363c18b2)
   Compiling quote v1.0.7
   Compiling mmscenegraph-rs v0.1.0 (/media/share/Users/catte/dev/cxx-demo-example)
    Finished release [optimized] target(s) in 18.52s
-- The C compiler identification is GNU 6.3.1
-- The CXX compiler identification is GNU 6.3.1
-- Check for working C compiler: /opt/rh/devtoolset-6/root/usr/bin/gcc
-- Check for working C compiler: /opt/rh/devtoolset-6/root/usr/bin/gcc - works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /opt/rh/devtoolset-6/root/usr/bin/g++
-- Check for working CXX compiler: /opt/rh/devtoolset-6/root/usr/bin/g++ - works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Finding: libmmscenegraph_rs.a
-- Rust Library: /media/dev/cxx-demo-example/target/release/libmmscenegraph_rs.a
-- Using cxxbridge: /home/davidc/.cargo/bin/cxxbridge
-- Configuring done
-- Generating done
-- Build files have been written to: /media/dev/cxx-demo-example/build_linux
[ 12%] Generating CXX Bridge: /media/dev/cxx-demo-example/include/mmscenegraph/_cxxbridge.h /media/dev/cxx-demo-example/src/_cxxbridge.cpp
Scanning dependencies of target mmscenegraph
[ 25%] Building CXX object src/CMakeFiles/mmscenegraph.dir/lib.cpp.o
[ 37%] Building CXX object src/CMakeFiles/mmscenegraph.dir/_cxxbridge.cpp.o
[ 50%] Linking CXX shared library libmmscenegraph.so
[ 50%] Built target mmscenegraph
Scanning dependencies of target mmscenegraph_tests
[ 62%] Building CXX object tests/CMakeFiles/mmscenegraph_tests.dir/main.cpp.o
[ 75%] Building CXX object tests/CMakeFiles/mmscenegraph_tests.dir/test_a.cpp.o
[ 87%] Building CXX object tests/CMakeFiles/mmscenegraph_tests.dir/test_b.cpp.o
[100%] Linking CXX executable mmscenegraph_tests
[100%] Built target mmscenegraph_tests
[ 50%] Built target mmscenegraph
[100%] Built target mmscenegraph_tests
Install the project...
-- Install configuration: "Release"
-- Installing: /media/dev/cxx-demo-example/install/lib/libmmscenegraph.so
-- Installing: /media/dev/cxx-demo-example/install/bin/mmscenegraph_tests

$ ./install/bin/mmscenegraph_tests
---- Start Testing...
2 + 2 = 4
---- Start Test A...
SCENEGRAPH: Add SceneGraph 42
SCENEGRAPH: Remove SceneGraph 0x157b490
---- Finished Test A!
---- Start Test B...
my awesome demo
new_read_operation(id=42, num=42)
ReadOperation.get_id()
ReadOperation.get_num()
Read Op Id: *
Read Op Num: 42
new_write_operation(id=42, num=42)
WriteOperation.get_id()
WriteOperation.get_num()
Write Op Id: *
Write Op Num: 42
---- Finished Test B!
done with ThingC
---- Finished Testing!

$ cxxbridge --version
cxxbridge 1.0.23
